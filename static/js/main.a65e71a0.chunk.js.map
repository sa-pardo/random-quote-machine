{"version":3,"sources":["Quote.js","App.js","reportWebVitals.js","index.js"],"names":["Quote","props","quote","info","id","author","href","icon","faTwitterSquare","onClick","type","value","App","useState","newColor","color","setColor","quotes","getRandomNumber","length","divStyle","style","colors","top","Math","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAIe,SAASA,EAAMC,GAC5B,IAAMC,EAAQD,EAAME,KAEpB,OACE,sBAAKC,GAAG,YAAR,UACE,oBAAGA,GAAG,OAAN,cAAeF,EAAMA,SACrB,oBAAGE,GAAG,SAAN,gBAAmBF,EAAMG,UACzB,mBAAGD,GAAG,cAAcE,KAAK,mCAAzB,SACE,cAAC,IAAD,CAAiBC,KAAMC,QAEzB,uBAAOJ,GAAG,YAAYK,QAASR,EAAMQ,QAASC,KAAK,SAASC,MAAM,iBCXzD,SAASC,IAAO,IAAD,EACFC,mBAAS,CACjC,UAAW,OACX,WAAYC,MAHc,mBACrBC,EADqB,KACdC,EADc,KAKtBd,EAAQe,EAAOC,EAAgBD,EAAOE,SACtCC,EAAQ,eACTL,GAUL,OACE,qBAAiCM,MAAOD,EAAUhB,GAAG,YAArD,SACE,cAACJ,EAAD,CAAOG,KAAMD,EAAOO,QATF,WACpBO,EAAS,CACP,UAAWD,EAAM,YACjB,WAAYD,UAKJI,EAAgB,MAM9B,IAAMJ,EAAW,kBAAMQ,EAAOJ,EAAgBI,EAAOH,UAE9C,SAASD,EAAgBK,GAC9B,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,GAGpC,IAAMD,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGIL,EAAS,CACb,CACEZ,OAAQ,cACRH,MAAO,gDAET,CACEG,OAAQ,kBACRH,MACE,mGAEJ,CAAEG,OAAQ,cAAeH,MAAO,iCAChC,CACEG,OAAQ,wBACRH,MAAO,qDAET,CACEG,OAAQ,YACRH,MACE,0GAEJ,CACEG,OAAQ,WACRH,MAAO,+DAET,CACEG,OAAQ,iBACRH,MAAO,oDAET,CACEG,OAAQ,eACRH,MACE,+EAEJ,CACEG,OAAQ,eACRH,MACE,iJAEJ,CACEG,OAAQ,oBACRH,MAAO,4DC1EIyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1B,EAAD,MAEF2B,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a65e71a0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitterSquare } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nexport default function Quote(props) {\r\n  const quote = props.info;\r\n\r\n  return (\r\n    <div id=\"quote-box\" >\r\n      <p id=\"text\">\"{quote.quote}</p>\r\n      <p id=\"author\"> - {quote.author}</p>\r\n      <a id=\"tweet-quote\" href=\"https://twitter.com/intent/tweet\">\r\n        <FontAwesomeIcon icon={faTwitterSquare} />\r\n      </a>\r\n      <input id=\"new-quote\" onClick={props.onClick} type=\"button\" value=\"New Quote\"></input>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport Quote from \"./Quote\";\n\nexport default function App() {\n  const [color, setColor] = useState({\n    '--color': \"#000\",\n    '--color2': newColor(),\n  })\n  const quote = quotes[getRandomNumber(quotes.length)];\n  const divStyle = {\n    ...color\n  };\n\n  const updateHandler = () => {\n    setColor({\n      '--color': color[\"--color2\"],\n      '--color2': newColor()\n    });\n  };\n\n  return (\n    <div key={getRandomNumber(1000)} style={divStyle} id=\"container\">\n      <Quote info={quote} onClick={updateHandler}/>\n    </div>\n  );\n}\n\nconst newColor = () => colors[getRandomNumber(colors.length)];\n\nexport function getRandomNumber(top) {\n  return Math.floor(Math.random() * top);\n}\n\nconst colors = [\n  \"#E3170A\",\n  \"#E16036\",\n  \"#731DD8\",\n  \"#48A9A6\",\n  \"#08B2E3\",\n  \"#57A773\",\n  \"#9CFFD9\",\n  \"#91A6FF\",\n  \"#FF37A6\",\n  \"#5cf64a\",\n];\n\nconst quotes = [\n  {\n    author: \"Oscar Wilde\",\n    quote: \"Be yourself; everyone else is already taken.\",\n  },\n  {\n    author: \"Albert Einstein\",\n    quote:\n      \"Two things are infinite: the universe and human stupidity; and I'm not sure about the universe.\",\n  },\n  { author: \"Frank Zappa\", quote: \"So many hooks, so little time\" },\n  {\n    author: \"Marcus Tullius Cicero\",\n    quote: \"A room without books is like a body wihtout soul.\",\n  },\n  {\n    author: \"Dr. Seuss\",\n    quote:\n      \"You know you're in love when you can't fall asleep because reality is finally better than your dreams.\",\n  },\n  {\n    author: \"Mae West\",\n    quote: \"You only live once, but if you do it right, once is enough.\",\n  },\n  {\n    author: \"Mahatma Ghandi\",\n    quote: \"Be the change that you want to see in the world.\",\n  },\n  {\n    author: \"Robets Frost\",\n    quote:\n      \"In three words I can sum up everything I've learned about life: it goes on.\",\n  },\n  {\n    author: \"Albert Camus\",\n    quote:\n      \"Don’t walk in front of me… I may not follow. Don’t walk behind me… I may not lead. Walk beside me… just be my friend\",\n  },\n  {\n    author: \"Eleanor Roosevelt\",\n    quote: \"No one can make you feel inferior without your consent.\",\n  },\n];\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}